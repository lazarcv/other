%{
#include <iostream>
#include <string>
#include <cstdlib>
#include <map>
#include "formula.hpp"

extern int yylex();

void yyerror(std::string msg){
    std::cerr<<msg<<std::endl;
    exit(EXIT_FAILURE);
}

std::map<std:: string, LOGIC_VAL> variables;
%}

%union{
    Formula* formula_type;
    std::string* str_type;
}

%token and_token or_token imp_token eq_token true_token false_token undef_token assign_token
%token<str_type> id_token
%type<formula_type> E

%left '!'
%left and_token
%left or_token
%left imp_token
%left eq_token
%left assign_token

%%
Program
        : Program Command
        | Command
        ;
        
Command
        : E '\n'{
            std::cout<<$1->str()<<std::endl;
            delete $1;
        }
        | id_token assign_token E '\n'{
            variables[*$1]=$3->value();
            delete $1;
            delete $3;
        }
        ;
        
E
        : '(' E ')'{
            $$=new Formula(*$2);
            delete $2;
        }
        | id_token{
            auto finder=variables.find(*$1);
            if(finder==variables.end()){
                $$=new Formula(UNDEFINED);
                variables[*$1]=UNDEFINED;
            }
            else{
                $$=new Formula(finder->second);
            }
            delete $1;
        }
        | E and_token E{
            $$=new Formula($1->and_val(*$3));
            delete $1;
            delete $3;
        }
        | E or_token E{
            $$=new Formula($1->or_val(*$3));
            delete $1;
            delete $3;
        }
        | E imp_token E{
            $$=new Formula($1->imp_val(*$3));
            delete $1;
            delete $3;
        }
        | E eq_token E{
            $$=new Formula($1->eq_val(*$3));
            delete $1;
            delete $3;
        }
        | '!' E{
            $$=new Formula($2->neg_val());
            delete $2;
        }
        | true_token{
            $$=new Formula(TRUE_VAL);
        }
        | false_token{
            $$=new Formula(FALSE_VAL);
        }
        | undef_token{
            $$=new Formula(UNDEFINED);
        }
        ;
%%

int main(){
    yyparse();
    return 0;
}
